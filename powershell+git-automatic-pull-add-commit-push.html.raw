<p>I am finding a simple way to update my local cloned repository with the remote and can run it automatically. After several search and test this is my working script.</p><p>The steps will involve 4 simple ones: pull from the remote &gt;&gt; find any local changes and index them &gt;&gt; commit the changes &gt;&gt; push it to the remote.</p><p>You will find below the script with all steps (required) : you must have git installed and configured to not asking for username + password on push command:</p><p><br></p><p># Git operations :&nbsp;</p><p># 0/ Update from the remote</p><p># 1/ Add all files</p><p># 2/ Commit</p><p># 3/ Push</p><p><br></p><p># TODO: Update correct path</p><p>$workingRepositoryFolder = "D:\Wip\Practices\Github\testgit"</p><p><br></p><p>########################</p><p><br></p><p>cd $workingRepositoryFolder</p><p><br></p><p># Step 0</p><p>$cmdPath = "git"</p><p>$cmdArgList = @(</p><p><span style="white-space: pre;">	</span>"pull"</p><p>)</p><p>&amp; $cmdPath $cmdArgList</p><p><br></p><p><br></p><p># Step 1</p><p>$cmdArgList = @(</p><p><span style="white-space: pre;">	</span>"add", "*.*"</p><p>)</p><p>&amp; $cmdPath $cmdArgList</p><p><br></p><p><br></p><p># Step 2</p><p>$cmdArgList = @(</p><p><span style="white-space: pre;">	</span>"commit", "-m", "This is a scheduled commit"</p><p>)</p><p>&amp; $cmdPath $cmdArgList</p><p><br></p><p><br></p><p># Step 3</p><p>$cmdArgList = @(</p><p><span style="white-space: pre;">	</span>"push"</p><p>)</p><p>&amp; $cmdPath $cmdArgList</p><div><br></div>