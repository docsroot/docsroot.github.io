<p>I want to archive some files from a specific folder and delete original files after the process completed. So the steps I wanted to do are:</p><p>1/ Define a number of days to keep original files, so all files within today -&gt; (today - N) will be kept.</p><p>2/ Define a max number of days to be processed, so if there are lot of files in the folder then only oldest&nbsp;files of M days will be processed. This will help to save the server resources.</p><p>3/ Define a target place to save new archived files</p><p>4/ Create an archive then delete all original files</p><p>5/ Send an email notification</p><p>For details, I will use powershell to find all files for step 1. After 7z will be used to compress and test files - the step 2. After all, Powershell will be used to delete original files already archived and sending a notification.</p><p><b>Implementation step 3</b></p><p>The PS function cmdlet&nbsp;Get-ChildItem will be used to filter for files. If $_.PSIsContainer flag is false, it will be a file.</p><p>Below script is used to get oldest file, if any</p><blockquote>$oldestFile = Get-ChildItem -Path $sourceFolder `<br><span style="white-space:pre">	</span>| Where-Object { !$_.PSIsContainer } | Sort-Object -Property "LastWriteTime" `<br><span style="white-space:pre">	</span>| Select -First 1</blockquote><div>And the below to search for files we need:</div><div><br></div><div><blockquote>$list = Get-ChildItem -Path $sourceFolder `<br><span style="white-space:pre">	</span>| Where-Object { !$_.PSIsContainer -and ($_.LastWriteTime -lt $maxDateToProcess) } `<br><span style="white-space:pre">	</span>| Sort-Object -Property "LastWriteTime" -Descending</blockquote></div><p>Next, I create a txt file which contains all path to files. This is an advantage of 7z. It's not working if I write the text file using the short hand " &gt; ", because encoding of the file is not UTF8.</p><blockquote>$allFiles = $list | Select -ExpandProperty "FullName"<br>$listfile = Join-Path $targetFolder "listfile.txt"<br>[IO.File]::WriteAllLines($listfile, $allFiles)</blockquote><div>and below all arguments for 7z.exe, it's almost done</div><div><br></div><div><blockquote>$7zipArgs = @(<br><span style="white-space:pre">	</span>"a",<br><span style="white-space:pre">	</span>"-t7z",<br><span style="white-space:pre">	</span>"-mx=9",<br><span style="white-space:pre">	</span>$newArchiveFullName,<br><span style="white-space:pre">	</span>"@$listfile"<br>)</blockquote></div><div>Now just run the script and all should be fine !!!</div><div><br></div><div><span style="background-color: rgb(255, 255, 0);">Be noted with 7z, when the listfile contains files from difference folders the archive actually does not have folders structure. So if you search the files in recusive mode, the archive may have issue.</span></div><div><br></div><div><b>Advanced scenarios</b></div><div>An issue happened is that one file (could be several ones) is being locked by other process - see ref for details, then it couldn't be added into the archive, neither being deleted also. If we check the zipping process / delete process with Powershell shorthand ( $:? ) it will be false.</div><div><br></div><div><br></div><div><br></div><div><b>References</b></div><ul><li><a href="https://sevenzip.osdn.jp/chm/cmdline/" target="_blank">Command Line Version User's Guide</a></li><li><a href="https://superuser.com/a/643312/570944" target="_blank">How to check if the file is locked</a><br><br></li></ul><p><br></p>